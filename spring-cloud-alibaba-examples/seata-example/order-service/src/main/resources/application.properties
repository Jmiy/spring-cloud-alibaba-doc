spring.application.name=order-service
server.port=18083
spring.cloud.nacos.discovery.server-addr=192.168.152.128:8848

spring.datasource.name="orderDataSource"
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.152.128:3306/seata_order?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=2
spring.datasource.druid.initial-size=2

### seata 配置
seata.enabled=true

### seata.tx-service-group=${your-service-gruop} 必须和 seata.service.vgroup_mapping.${your-service-gruop}=default 中间的 ${your-service-gruop} 一致，否则在启动工程后会一直报错 no available server to connect 。
### 比如：seata.tx-service-group=a 必须配置  seata.service.vgroup-mapping.a=default
##spring.cloud.alibaba.seata.tx-service-group=${spring.application.name}
seata.tx-service-group=${spring.application.name}

###seata 服务端
#seata.service.vgroup-mapping.order-service=default
#seata.service.vgroup-mapping.my_test_tx_group=default
#seata.service.grouplist.default=127.0.0.1:8091
#seata.service.enable-degrade=false
#seata.service.disable-global-transaction=false

## if use registry center
#seata.registry.type=nacos
#seata.registry.nacos.cluster=default
#seata.registry.nacos.server-addr=localhost
#
## if use config center
#seata.config.type=apollo
#seata.config.apollo.apollo-meta=http://192.168.1.204:8801
#seata.config.apollo.app-id=seata-server

##Seata 不包含自动代理 可以注释
#seata.excludes-for-auto-proxying=firstClassNameForExclude,secondClassNameForExclude
#seata.application-id=${spring.application.name}
####注意 seata.tx-service-group 必须和 spring.cloud.alibaba.seata.tx-service-group 保存一致，或者直接注释掉默认使用 spring.cloud.alibaba.seata.tx-service-group 建议注释
####否则会报 i.s.c.r.netty.NettyClientChannelManager  : no available service 'null' found, please make sure registry config correct
##seata.tx-service-group=${spring.cloud.alibaba.seata.tx-service-group}
#seata.enable-auto-data-source-proxy=true
#seata.data-source-proxy-mode=AT
#seata.use-jdk-proxy=false
#
####RM (Resource Manager) - 资源管理器
####管理分支事务处理的资源，与TC交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。
#seata.client.rm.async-commit-buffer-limit=10000
#seata.client.rm.report-retry-count=5
#seata.client.rm.table-meta-check-enable=false
#seata.client.rm.report-success-enable=false
#seata.client.rm.saga-branch-register-enable=false
#seata.client.rm.saga-json-parser=fastjson
#seata.client.rm.saga-retry-persist-mode-update=false
#seata.client.rm.saga-compensate-persist-mode-update=false
#seata.client.rm.lock.retry-interval=10
#seata.client.rm.lock.retry-times=30
#seata.client.rm.lock.retry-policy-branch-rollback-on-conflict=true
#
####TM (Transaction Manager) - 事务管理器
####定义全局事务的范围：开始全局事务、提交或回滚全局事务
#seata.client.tm.commit-retry-count=5
#seata.client.tm.rollback-retry-count=5
#seata.client.tm.default-global-transaction-timeout=60000
#seata.client.tm.degrade-check=false
#seata.client.tm.degrade-check-allow-times=10
#seata.client.tm.degrade-check-period=2000
#
####事务回滚配置
#seata.client.undo.data-validation=true
#seata.client.undo.log-serialization=jackson
#seata.client.undo.only-care-update-columns=true
#seata.client.undo.log-table=undo_log
#seata.client.undo.compress.enable=true
#seata.client.undo.compress.type=zip
#seata.client.undo.compress.threshold=64k
#
####seata 客户端 负载均衡 配置
#seata.client.load-balance.type=RandomLoadBalance
#seata.client.load-balance.virtual-nodes=10
#
####seata log 异常采集率
#seata.log.exception-rate=100

####seata transport 配置
#seata.transport.shutdown.wait=3
#seata.transport.thread-factory.boss-thread-prefix=NettyBoss
#seata.transport.thread-factory.worker-thread-prefix=NettyServerNIOWorker
#seata.transport.thread-factory.server-executor-thread-prefix=NettyServerBizHandler
#seata.transport.thread-factory.share-boss-worker=false
#seata.transport.thread-factory.client-selector-thread-prefix=NettyClientSelector
#seata.transport.thread-factory.client-selector-thread-size=1
#seata.transport.thread-factory.client-worker-thread-prefix=NettyClientWorkerThread
#seata.transport.thread-factory.worker-thread-size=default
#seata.transport.thread-factory.boss-thread-size=1
#seata.transport.type=TCP
#seata.transport.server=NIO
#seata.transport.heartbeat=true
#seata.transport.serialization=seata
#seata.transport.compressor=none
#seata.transport.enable-client-batch-send-request=true
#
###seata 配置中心
seata.config.type=nacos

seata.config.consul.server-addr=127.0.0.1:8500
seata.config.consul.acl-token=

seata.config.apollo.apollo-meta=http://192.168.1.204:8801
seata.config.apollo.apollo-accesskey-secret=
seata.config.apollo.app-id=seata-server
seata.config.apollo.namespace=application

seata.config.etcd3.server-addr=http://localhost:2379

seata.config.nacos.dataId=seata.properties
seata.config.nacos.namespace=
seata.config.nacos.server-addr=192.168.152.128:8848
seata.config.nacos.group=SEATA_GROUP
seata.config.nacos.username=nacos
seata.config.nacos.password=nacos
seata.config.nacos.cluster = "default"

seata.config.zk.server-addr=127.0.0.1:2181
seata.config.zk.session-timeout=6000
seata.config.zk.connect-timeout=2000
seata.config.zk.username=
seata.config.zk.password=

seata.config.custom.name=

###seata 服务注册发现中心 使用nacos作为服务注册发现中心
seata.registry.type=nacos

seata.registry.consul.server-addr=127.0.0.1:8500

seata.registry.etcd3.server-addr=http://localhost:2379

seata.registry.eureka.weight=1
seata.registry.eureka.service-url=http://localhost:8761/eureka

###nacos 服务注册发现中心 连接服务端配置
seata.registry.nacos.application=seata-server
seata.registry.nacos.server-addr=192.168.152.128:8848
seata.registry.nacos.group=SEATA_GROUP
seata.registry.nacos.namespace=
seata.registry.nacos.username=nacos
seata.registry.nacos.password=nacos
seata.registry.nacos.cluster=default

seata.registry.redis.server-addr=localhost:6379
seata.registry.redis.db=0
seata.registry.redis.password=
seata.registry.redis.timeout=0

seata.registry.sofa.server-addr=127.0.0.1:9603
seata.registry.sofa.region=DEFAULT_ZONE
seata.registry.sofa.datacenter=DefaultDataCenter
seata.registry.sofa.group=SEATA_GROUP
seata.registry.sofa.address-wait-time=3000
seata.registry.sofa.application=default

seata.registry.zk.server-addr=127.0.0.1:2181
seata.registry.zk.session-timeout=6000
seata.registry.zk.connect-timeout=2000
seata.registry.zk.username=
seata.registry.zk.password=

seata.registry.custom.name=
