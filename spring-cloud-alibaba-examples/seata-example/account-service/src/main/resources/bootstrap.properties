spring.application.name=account-service
spring.cloud.nacos.config.server-addr=192.168.152.128:8848

#nacos certification information
spring.cloud.nacos.username=nacos
spring.cloud.nacos.password=nacos

## nacos-namespace cannot user 'public',cause by 'public' has special handing inside. 自定义的命名空间
#spring.cloud.nacos.config.namespace=public

## you can specify a custom name if you don't want to use the application name.
#spring.cloud.nacos.config.name=test-aaa
## 基于 DataId 为 yaml 的文件扩展名配置方式
#spring.cloud.nacos.config.file-extension=yaml

## not recommended.
#spring.cloud.nacos.config.refreshable-dataids=common.properties
## not recommended.
#spring.cloud.nacos.config.shared-data-ids=common.properties,base-common.properties

## recommended.
spring.cloud.nacos.config.shared-configs[0].data-id= test2.yaml
spring.cloud.nacos.config.shared-configs[0].refresh=true
## the default value is 'DEFAULT_GROUP' , if not specified.
spring.cloud.nacos.config.shared-configs[0].group= GROUP_APP1

## not recommended. NOTE: 多个 Data Id 同时配置时，他的优先级关系是 `spring.cloud.nacos.config.ext-config[n].data-id` 其中 n 的值越大，优先级越高。
#spring.cloud.nacos.config.ext-config[0]=ext.properties
## recommended.
spring.cloud.nacos.config.extension-configs[0].data-id=nacos-config-develop1.properties
spring.cloud.nacos.config.extension-configs[0].group=DEFAULT_GROUP
spring.cloud.nacos.config.extension-configs[0].refresh=true
spring.cloud.nacos.config.extension-configs[1].data-id= test1.yml
spring.cloud.nacos.config.extension-configs[1].refresh= true
#spring.cloud.nacos.config.extension-configs[2].data-id=seataServer.properties
#spring.cloud.nacos.config.extension-configs[2].group=SEATA_GROUP
#spring.cloud.nacos.config.extension-configs[2].refresh=true

## NOTE: 你可以通过配置 `spring.cloud.nacos.config.refresh.enabled=false` 来关闭动态刷新
#spring.cloud.nacos.config.refresh-enabled=true

## === 支持profile粒度的配置
## Nacos Config 在加载配置的时候，不仅仅加载了以 DataId 为 `${spring.application.name}.${file-extension:properties}`   为前缀的基础配置，还加载了DataId为 `${spring.application.name}-${profile}.${file-extension:properties}` 的基础配置。在日常开发中如果遇到多套环境下的不同配置，可以通过Spring 提供的 `${spring.profiles.active}` 这个配置项来配置。
## [source,properties]
## ----
## spring.profiles.active=develop
## ----
## NOTE: ${spring.profiles.active} 当通过配置文件来指定时必须放在 bootstrap.properties 文件中。
## Nacos 上新增一个DataId为：nacos-config-develop.properties的基础配置，如下所示：
#spring.profiles.active=develop

## === 完全关闭 Nacos Config 的自动化配置
## 通过设置 spring.cloud.nacos.config.enabled = false 来完全关闭 Spring Cloud Nacos Config

